{"version":3,"sources":["components/layout/spinner.gif","actions/alert.js","actions/types.js","utils/setAuthToken.js","actions/auth.js","components/layout/Navbar.js","components/layout/Landing.js","components/layout/Alert.js","components/auth/Register.js","components/auth/Login.js","components/layout/Spinner.js","components/profiles/ProfileItem.js","actions/profile.js","components/profiles/Profiles.js","components/profile/ProfileTop.js","components/profile/ProfileAbout.js","components/profile/ProfileExperience.js","components/profile/ProfileEducation.js","components/profile/Profile.js","components/routing/PrivateRoute.js","components/dashboard/DashboardActions.js","components/dashboard/Experience.js","components/dashboard/Education.js","components/dashboard/Dashboard.js","components/profile-forms/CreateProfile.js","components/profile-forms/EditProfile.js","components/profile-forms/AddExperience.js","components/profile-forms/AddEducation.js","components/posts/PostItem.js","actions/post.js","components/posts/PostForm.js","components/posts/Posts.js","components/post/CommentForm.js","components/post/CommentItem.js","components/post/Post.js","components/layout/NotFound.js","components/routing/Routes.js","reducers/alert.js","reducers/auth.js","reducers/profile.js","reducers/post.js","reducers/index.js","store.js","App.js","index.js"],"names":["module","exports","setAlert","msg","alertType","timeout","dispatch","id","uuid","v4","type","payload","setTimeout","setAuthToken","token","axios","defaults","headers","common","loadUser","a","localStorage","get","res","data","Navbar","auth","isAuthenticated","loading","logout","authLinks","to","className","onClick","href","guestLinks","prototype","PropTypes","func","isRequired","object","connect","state","alerts","alert","length","map","key","register","name","email","password","config","body","JSON","stringify","post","errors","response","forEach","error","useState","password2","formData","setFormData","onChange","e","target","value","onSubmit","preventDefault","placeholder","required","minLength","login","src","spinner","style","width","margin","display","alt","ProfileItem","profile","user","_id","avatar","status","company","location","skills","slice","skill","index","getCurrentProfile","statusText","createProfile","history","edit","push","getProfiles","profiles","useEffect","Spinner","ProfileTop","website","social","rel","twitter","facebook","linkedin","youtube","instagram","ProfileAbout","bio","trim","split","ProfileExperience","experience","title","current","from","description","format","ProfileEducation","education","school","degree","fieldofstudy","getProfileById","userId","match","params","Component","component","rest","render","props","DashboardActions","deleteExperience","delete","experiences","exp","deleteEducation","educations","edu","deleteAccount","window","confirm","withRouter","githubusername","displaySocialInputs","toggleSocialInputs","join","addExperience","put","toDateDisabled","toggleDisabled","checked","disabled","cols","rows","addEducation","PostItem","addLike","removeLike","deletePost","text","likes","comments","date","showActions","defaultProps","addPost","setText","getPosts","posts","addComment","postId","deleteComment","commentId","comment","getPost","NotFound","Routes","exact","path","Register","Login","Profiles","Profile","Dashboard","CreateProfile","EditProfile","AddExperience","AddEducation","Posts","Post","initialState","getItem","repos","combineReducers","action","filter","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","Landing","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.51ab8a8d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.6b04ff37.gif\";","import uuid from 'uuid';\nimport {REMOVE_ALERT, SET_ALERT} from \"./types\";\n\nexport const setAlert = (msg, alertType, timeout = 5000) => dispatch => {\n    const id = uuid.v4();\n    dispatch({\n        type: SET_ALERT,\n        payload: {msg, alertType, id}\n    });\n\n    setTimeout(() => dispatch({type: REMOVE_ALERT, payload: id}), timeout);\n}\n","export const SET_ALERT = 'SET_ALERT';\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\nexport const USER_LOADED = 'USER_LOADED';\nexport const AUTH_ERROR = 'AUTH_ERROR';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\nexport const LOGOUT = 'LOGOUT';\nexport const GET_PROFILE = 'GET_PROFILE';\nexport const GET_PROFILES = 'GET_PROFILES';\nexport const GET_REPOS = 'GET_REPOS';\nexport const UPDATE_PROFILE = 'UPDATE_PROFILE';\nexport const CLEAR_PROFILE = 'CLEAR_PROFILE';\nexport const PROFILE_ERROR = 'PROFILE_ERROR';\nexport const ACCOUNT_DELETE = 'ACCOUNT_DELETE';\nexport const GET_POSTS = 'GET_POSTS';\nexport const GET_POST = 'GET_POST';\nexport const POST_ERROR = 'POST_ERROR';\nexport const UPDATE_LIKES = 'UPDATE_LIKES';\nexport const DELETE_POST = 'DELETE_POST';\nexport const ADD_POST = 'ADD_POST';\nexport const ADD_COMMENT = 'ADD_COMMENT';\nexport const REMOVE_COMMENT = 'REMOVE_COMMENT';","import axios from 'axios';\nconst setAuthToken = token => {\n    if(token) {\n        axios.defaults.headers.common['x-auth-token'] = token;\n    } else {\n        delete axios.defaults.headers.common['x-auth-token'];\n    }\n}\n\nexport default setAuthToken;\n","import axios from 'axios';\nimport {setAlert} from \"./alert\";\nimport {\n    AUTH_ERROR,\n    LOGIN_FAIL,\n    LOGIN_SUCCESS,\n    REGISTER_FAIL,\n    REGISTER_SUCCESS,\n    USER_LOADED,\n    LOGOUT,\n    CLEAR_PROFILE\n} from \"./types\";\n\nimport setAuthToken from \"../utils/setAuthToken\";\n\n// Load User\nexport const loadUser = () => async dispatch => {\n    if (localStorage.token) {\n        setAuthToken(localStorage.token);\n    }\n\n    try {\n        const res = await axios.get('/api/auth');\n        dispatch({\n            type: USER_LOADED,\n            payload: res.data\n        })\n    } catch (err) {\n        dispatch({\n            type: AUTH_ERROR\n        })\n    }\n}\n\n// Register User\nexport const register = ({name, email, password}) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    }\n\n    const body = JSON.stringify({name, email, password});\n    try {\n        const res = await axios.post('/api/users', body, config);\n        dispatch({\n            type: REGISTER_SUCCESS,\n            payload: res.data\n        });\n        dispatch(loadUser());\n    } catch (err) {\n        const errors = err.response.data.errors;\n\n        if (errors) {\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))\n        }\n\n        dispatch({\n            type: REGISTER_FAIL\n        });\n    }\n}\n\n// Login User\nexport const login = (email, password) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    }\n\n    const body = JSON.stringify({email, password});\n\n    try {\n        const res = await axios.post('/api/auth', body, config);\n        dispatch({\n            type: LOGIN_SUCCESS,\n            payload: res.data\n        });\n        dispatch(loadUser());\n    } catch (err) {\n        const errors = err.response.data.errors;\n\n        if (errors) {\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))\n        }\n\n        dispatch({\n            type: LOGIN_FAIL\n        });\n    }\n}\n\n// Logout / Clear Profile\nexport const logout =() => dispatch => {\n    dispatch({ type: CLEAR_PROFILE });\n    dispatch({ type: LOGOUT });\n}\n","import React, { Fragment } from \"react\";\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { logout } from \"../../actions/auth\";\n\nconst Navbar = ({ auth: {isAuthenticated, loading}, logout }) => {\n    const authLinks = (\n        <ul>\n            <li><Link to=\"/developers\">Developers</Link></li>\n            <li><Link to=\"/posts\">Posts</Link></li>\n            <li>\n                <Link to={'/dashboard'}>\n                    <i className=\"fas fa-user\"></i> {' '}\n                    <span className=\"hide-sm\">Dashboard</span>\n                </Link>\n            </li>\n            <li>\n                <a onClick={logout} href=\"#!\">\n                    <i className={'fas fa-sign-out-alt'}></i>{' '}\n                   <span className={'hide-sm'}>Logout</span>\n                </a>\n            </li>\n        </ul>\n    );\n\n    const guestLinks = (\n        <ul>\n            <li><Link to=\"/developers\">Developers</Link></li>\n            <li><Link to=\"/register\">Register</Link></li>\n            <li><Link to=\"/login\">Login</Link></li>\n        </ul>\n    );\n\n    return (\n        <nav className=\"navbar bg-dark\">\n            <h1>\n                <Link to=\"/\">\n                    <i className=\"fas fa-code\"></i> DevConnector\n                </Link>\n            </h1>\n            {!loading && (<Fragment>{ isAuthenticated ? authLinks : guestLinks }</Fragment>)}\n        </nav>\n    )\n}\n\nNavbar.prototype = {\n    logout: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n   auth: state.auth\n});\n\nexport default connect(mapStateToProps, {logout})(Navbar);","import React from \"react\";\nimport {Link, Redirect} from \"react-router-dom\";\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\n\nconst Landing = ({isAuthenticated}) => {\n    if(isAuthenticated) {\n        return <Redirect to={'/dashboard'} />\n    }\n\n    return (\n        <section className=\"landing\">\n            <div className=\"dark-overlay\">\n                <div className=\"landing-inner\">\n                    <h1 className=\"x-large\">Developer Connector</h1>\n                    <p className=\"lead\">\n                        Create a developer profile/portfolio, share posts and get help from\n                        other developers\n                    </p>\n                    <div className=\"buttons\">\n                        <Link to=\"/register\" className=\"btn btn-primary\">Sign Up</Link>\n                        <Link to=\"/login\" className=\"btn btn-light\">Login</Link>\n                    </div>\n                </div>\n            </div>\n        </section>\n    )\n}\n\nLanding.propTypes = {\n    isAuthenticated: PropTypes.bool\n}\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps)(Landing);\n","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\n\nconst Alert = ({alerts}) =>\n    alerts !== null && alerts.length > 0 && alerts.map(alert => (\n        <div key={alert.id} className={`alert alert-${alert.alertType}`}>\n            {alert.msg}\n        </div>\n    ));\n\nAlert.propTypes = {\n    alerts: PropTypes.array.isRequired\n}\n\nconst mapStateToProps = state => ({\n    alerts: state.alert\n});\nexport default connect(mapStateToProps)(Alert);","import React, {Fragment, useState} from 'react';\nimport {connect} from \"react-redux\";\nimport {Link, Redirect} from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {setAlert} from \"../../actions/alert\";\nimport {register} from \"../../actions/auth\";\n\nconst Register = ({setAlert, register, isAuthenticated}) => {\n    const [formData, setFormData] = useState({\n        name: '',\n        email: '',\n        password: '',\n        password2: ''\n    });\n\n    const {name, email, password, password2} = formData;\n\n    const onChange = e => setFormData({...formData, [e.target.name]: e.target.value})\n\n    const onSubmit = async e => {\n        e.preventDefault();\n        if (password !== password2) {\n            setAlert('Password do not match', 'danger');\n        } else {\n            register({name, email, password});\n        }\n    }\n\n    if (isAuthenticated) {\n        return <Redirect to={'/dashboard'}/>\n    }\n\n    return (\n        <Fragment>\n            <h1 className=\"large text-primary\">Sign Up</h1>\n            <p className=\"lead\"><i className=\"fas fa-user\"></i> Create Your Account</p>\n            <form className=\"form\" onSubmit={e => onSubmit(e)}>\n                <div className=\"form-group\">\n                    <input type=\"text\" placeholder=\"Name\" name=\"name\" value={name} onChange={e => onChange(e)}\n                           required/>\n                </div>\n                <div className=\"form-group\">\n                    <input type=\"email\" required placeholder=\"Email Address\" name=\"email\" value={email}\n                           onChange={e => onChange(e)}/>\n                    <small className=\"form-text\"\n                    >This site uses Gravatar so if you want a profile image, use a\n                        Gravatar email</small\n                    >\n                </div>\n                <div className=\"form-group\">\n                    <input\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        name=\"password\"\n                        minLength=\"6\"\n                        value={password}\n                        onChange={e => onChange(e)}\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <input\n                        type=\"password\"\n                        placeholder=\"Confirm Password\"\n                        name=\"password2\"\n                        minLength=\"6\"\n                        value={password2}\n                        onChange={e => onChange(e)}\n                    />\n                </div>\n                <input type=\"submit\" className=\"btn btn-primary\" value=\"Register\"/>\n            </form>\n            <p className=\"my-1\">\n                Already have an account? <Link to=\"/login\">Sign In</Link>\n            </p>\n        </Fragment>\n    );\n};\n\nRegister.propTypes = {\n    setAlert: PropTypes.func.isRequired,\n    register: PropTypes.func.isRequired,\n    isAuthenticated: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated\n})\n\nexport default connect(\n    mapStateToProps,\n    {setAlert, register}\n)(Register);\n","import React, {Fragment, useState} from 'react';\nimport {Link, Redirect} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {login} from '../../actions/auth';\n\nconst Login = ({login, isAuthenticated}) => {\n    const [formData, setFormData] = useState({\n        email: '',\n        password: ''\n    });\n\n    const {email, password} = formData;\n\n    const onChange = (e) => setFormData({...formData, [e.target.name]: e.target.value})\n\n    const onSubmit = async (e)=> {\n        e.preventDefault();\n        login(email, password);\n    }\n\n    // Redirect if logged in\n    if(isAuthenticated) {\n        return <Redirect to={'/dashboard'} />\n    }\n\n    return (\n        <Fragment>\n            <h1 className=\"large text-primary\">Sign In</h1>\n            <p className=\"lead\"><i className=\"fas fa-user\"></i> Sign Into Your Account</p>\n            <form className=\"form\" onSubmit={e => onSubmit(e)}>\n                <div className=\"form-group\">\n                    <input type=\"email\" placeholder=\"Email Address\" name=\"email\" value={email}\n                           onChange={e => onChange(e)}/>\n                </div>\n                <div className=\"form-group\">\n                    <input\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        name=\"password\"\n                        minLength=\"6\"\n                        value={password}\n                        onChange={e => onChange(e)}\n                    />\n                </div>\n\n                <input type=\"submit\" className=\"btn btn-primary\" value=\"Login\"/>\n            </form>\n            <p className=\"my-1\">\n                Don't have an account? <Link to=\"/register\">Register</Link>\n            </p>\n        </Fragment>\n    );\n}\n\nLogin.propTypes = {\n    login: PropTypes.func.isRequired,\n    auth: PropTypes.bool\n}\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, {login})(Login);\n","import React, {Fragment} from \"react\";\nimport spinner from './spinner.gif';\n\nexport default () => (\n    <Fragment>\n        <img\n            src={spinner}\n            style={{width: '200px', margin: 'auto', display: 'block'}}\n            alt={'Loading... '}\n        />\n    </Fragment>\n)\n","import React, { Fragment } from 'react';\nimport { Link } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\n\nconst ProfileItem = ({ profile: {\n    user: { _id, name, avatar },\n    status,\n    company,\n    location,\n    skills\n} }) => {\n\n    return  (\n        <Fragment>\n            <div className=\"profile bg-light\">\n                <img src={avatar} alt={name} className={'round-img'}/>\n                <div>\n                    <h2>{name}</h2>\n                    <p>{status} {company && <span>at {company}</span>}</p>\n                    <p className=\"my-1\">{location && <span>{location}</span>}</p>\n                    <Link to={`/profile/${_id}`}  className={'btn btn-primary'}>View Profile</Link>\n                </div>\n                <ul>\n                    {skills.slice(0,4).map((skill, index) => (\n                        <li key={index} className={'text-primary'}>\n                            <i className=\"fas fa-check\"></i> {skill}\n                        </li>\n                    ))}\n                </ul>\n            </div>\n        </Fragment>\n    );\n};\n\nProfileItem.propTypes = {\n    profile: PropTypes.object.isRequired\n};\n\nexport default ProfileItem;","import axios from 'axios';\nimport {setAlert} from \"./alert\";\nimport {\n    GET_PROFILE,\n    GET_PROFILES,\n    PROFILE_ERROR,\n    UPDATE_PROFILE,\n    ACCOUNT_DELETE,\n    CLEAR_PROFILE,\n    GET_REPOS\n} from \"./types\";\n\n// Get current users profile\nexport const getCurrentProfile = () => async dispatch => {\n    try {\n        const res = await axios.get('/api/profile/me');\n\n        dispatch({\n            type: GET_PROFILE,\n            payload: res.data\n        });\n    } catch (err) {\n        dispatch({ type: CLEAR_PROFILE });\n\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: {msg: err.response.statusText, status: err.response.status }\n        });\n    }\n};\n\n// Get all profiles\nexport const getProfiles = () => async dispatch => {\n    dispatch({ type: CLEAR_PROFILE });\n\n    try {\n        const res = await axios.get('/api/profile');\n\n        dispatch({\n            type: GET_PROFILES,\n            payload: res.data\n        });\n    } catch (err) {\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: {msg: err.response.statusText, status: err.response.status }\n        });\n    }\n};\n\n// Get github repos\nexport const getGithubRepos = username => async dispatch => {\n\n    try {\n        const res = await axios.get(`/api/profile/github/${username}`);\n\n        dispatch({\n            type: GET_REPOS,\n            payload: res.data\n        });\n    } catch (err) {\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: {msg: err.response.statusText, status: err.response.status }\n        });\n    }\n};\n\n// Get profile by ID\nexport const getProfileById = userId => async dispatch => {\n    try {\n        const res = await axios.get(`/api/profile/user/${userId}`);\n\n        dispatch({\n            type: GET_PROFILE,\n            payload: res.data\n        });\n    } catch (err) {\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: {msg: err.response.statusText, status: err.response.status }\n        });\n    }\n};\n\n// Create or update profile\nexport const createProfile = (formData, history, edit= false) => async dispatch => {\n    try {\n        const config = {\n            'Content-Type': 'application/json'\n        };\n\n        const res = await axios.post('/api/profile', formData, config);\n\n        dispatch({\n            type: GET_PROFILE,\n            payload: res.data\n        });\n\n        dispatch( setAlert(edit?'Profile Updated':'Profile Created', 'success') );\n        if(!edit) {\n            history.push('/dashboard');\n        }\n    } catch (err) {\n        const errors = err.response.data.errors;\n\n        if (errors) {\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))\n        }\n\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: {msg: err.response.statusText, status: err.response.status }\n        });\n    }\n};\n\n// Add Experience\nexport const addExperience = (formData, history ) => async dispatch => {\n    try {\n        const config = {\n            'Content-Type': 'application/json'\n        };\n        const res = await axios.put('/api/profile/experience', formData, config);\n\n        dispatch({\n            type: UPDATE_PROFILE,\n            payload: res.data\n        });\n\n        dispatch( setAlert('Experience Added', 'success') );\n        history.push('/dashboard');\n    } catch (err) {\n        const errors = err.response.data.errors;\n\n        if (errors) {\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))\n        }\n\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: {msg: err.response.statusText, status: err.response.status }\n        });\n    }\n};\n\n// Add Education\nexport const addEducation = (formData, history ) => async dispatch => {\n    try {\n        const config = {\n            'Content-Type': 'application/json'\n        };\n\n        const res = await axios.put('/api/profile/education', formData, config);\n\n        dispatch({\n            type: UPDATE_PROFILE,\n            payload: res.data\n        });\n\n        dispatch( setAlert('Education Added', 'success') );\n        history.push('/dashboard');\n    } catch (err) {\n        const errors = err.response.data.errors;\n\n        if (errors) {\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))\n        }\n\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: {msg: err.response.statusText, status: err.response.status }\n        });\n    }\n};\n\n// Delete experience\nexport const deleteExperience = id => async dispatch  => {\n    try {\n        const res = await axios.delete(`/api/profile/experience/${id}`);\n\n        dispatch({\n            type: UPDATE_PROFILE,\n            payload: res.data\n        });\n\n        dispatch(setAlert('Experience removed','success'));\n\n    } catch (err) {\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: {msg: err.response.statusText, status: err.response.status }\n        });\n    }\n};\n\n\n// Delete education\nexport const deleteEducation = id => async dispatch  => {\n    try {\n        const res = await axios.delete(`/api/profile/education/${id}`);\n\n        dispatch({\n            type: UPDATE_PROFILE,\n            payload: res.data\n        });\n\n        dispatch(setAlert('Education removed','success'));\n\n    } catch (err) {\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: {msg: err.response.statusText, status: err.response.status }\n        });\n    }\n};\n\n// Delete account & profile\nexport const deleteAccount = () => async dispatch =>{\n    if(window.confirm('Are you sure ? this can NOT be undone')) {\n        try {\n            await axios.delete('/api/profile');\n            dispatch({ type: CLEAR_PROFILE });\n            dispatch({ type: ACCOUNT_DELETE });\n\n            dispatch(setAlert('Your account has  been permanently deleted'))\n        } catch (err) {\n            dispatch({\n                type: PROFILE_ERROR,\n                payload: {msg: err.response.statusText, status: err.response.status }\n            });\n        }\n    }\n}\n\n","import React, { useEffect, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport Spinner from \"../layout/Spinner\";\nimport ProfileItem from \"./ProfileItem\";\nimport { getProfiles } from \"../../actions/profile\";\n\nconst Profiles = ({ getProfiles, profile: {profiles, loading} }) => {\n    useEffect(() => {\n        getProfiles();\n    }, [getProfiles]);\n\n    return  (\n        <Fragment>\n            {loading?<Spinner/>:<Fragment>\n                <h1 className=\"large text-primary\">Developers</h1>\n                <p className=\"lead\">\n                    <i className=\"fab fa-connectdevelop\"></i> Browse and connect with developers\n                </p>\n                <div className=\"profiles\">\n                    {profiles.length > 0 ? (\n                        profiles.map(profile => (\n                            <ProfileItem key={profile._id} profile={profile} />\n                        ))\n                    ) : (<h4>No profiles found</h4>)}\n                </div>\n            </Fragment>}\n        </Fragment>\n    );\n};\n\nProfiles.propTypes = {\n    getProfiles: PropTypes.func.isRequired,\n    profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    profile: state.profile\n});\n\nexport default connect(mapStateToProps, {getProfiles})(Profiles);\n","import React, {Fragment} from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst ProfileTop = ({\n    profile: {\n        status,\n        company,\n        location,\n        website,\n        social,\n        user: {name, avatar}\n    }\n}) => {\n    return (\n        <Fragment>\n            <div className=\"profile-top bg-primary p-2\">\n                <img\n                    className=\"round-img my-1\"\n                    src={avatar}\n                    alt={name}\n                />\n                <h1 className=\"large\">{name}</h1>\n                <p className=\"lead\">{status} at {company && <span>{company}</span>}</p>\n                <p>{location && <span>{location}</span>}</p>\n                <div className=\"icons my-1\">\n                    {\n                        website && (\n                            <a href={website} target=\"_blank\" rel=\"noopener noreferrer\">\n                                <i className=\"fas fa-globe fa-2x\"></i>\n                            </a>\n                        )\n                    }\n                    {\n                        social && social.twitter && (\n                            <a href={social.twitter} target=\"_blank\" rel=\"noopener noreferrer\">\n                                <i className=\"fab fa-twitter fa-2x\"></i>\n                            </a>\n                        )\n                    }\n\n                    {\n                        social && social.facebook && (\n                            <a href={social.facebook} target=\"_blank\" rel=\"noopener noreferrer\">\n                                <i className=\"fab fa-facebook fa-2x\"></i>\n                            </a>\n                        )\n                    }\n\n                    {\n                        social && social.linkedin && (\n                            <a href={social.linkedin} target=\"_blank\" rel=\"noopener noreferrer\">\n                                <i className=\"fab fa-linkedin fa-2x\"></i>\n                            </a>\n                        )\n                    }\n\n                    {\n                        social && social.youtube && (\n                            <a href={social.youtube} target=\"_blank\" rel=\"noopener noreferrer\">\n                                <i className=\"fab fa-youtube fa-2x\"></i>\n                            </a>\n                        )\n                    }\n\n                    {\n                        social && social.instagram && (\n                            <a href={social.instagram} target=\"_blank\" rel=\"noopener noreferrer\">\n                                <i className=\"fab fa-instagram fa-2x\"></i>\n                            </a>\n                        )\n                    }\n\n                </div>\n            </div>\n        </Fragment>\n    )\n};\n\nProfileTop.propTypes = {\n    profile: PropTypes.object.isRequired\n};\n\n\nexport default ProfileTop;","import React, {Fragment} from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst ProfileAbout = ({ profile: { bio, skills, user: {name} }}) => {\n    return (\n        <Fragment>\n            <div className=\"profile-about bg-light p-2\">\n                <h2 className=\"text-primary\">{name.trim().split(' ')[0]}'s Bio</h2>\n                <p>{bio}</p>\n                <div className=\"line\"></div>\n                <h2 className=\"text-primary\">Skill Set</h2>\n                <div className=\"skills\">\n                    {\n                        skills && ( skills.map((skill, index) => (\n                            <div key={index} className=\"p-1\"><i className=\"fa fa-check\"></i> {skill}</div>\n                        )))\n                    }\n                </div>\n            </div>\n        </Fragment>\n    )\n};\n\nProfileAbout.propTypes = {\n    profile: PropTypes.object.isRequired\n};\n\n\nexport default ProfileAbout;","import React, {Fragment} from \"react\";\nimport PropTypes from \"prop-types\";\nimport Moment from \"react-moment\";\n\nconst ProfileExperience = ({ experience: {\n    company, title, location, current, to, from, description\n} }) => {\n    return (\n        <Fragment>\n            <div>\n                <h3 className=\"text-dark\">{company}</h3>\n                <p><strong>Location: </strong>{location}</p>\n                <p><Moment format={'YYYY/MM/DD'}>{from}</Moment> - { current ? ' Current': <Moment format={'YYYY/MM/DD'}>{to}</Moment>}</p>\n                <p><strong>Position: </strong>{title}</p>\n                <p><strong>Description: </strong>{description}</p>\n            </div>\n        </Fragment>\n    )\n};\n\nProfileExperience.propTypes = {\n    experience: PropTypes.object.isRequired\n};\n\nexport default ProfileExperience;","import React, {Fragment} from \"react\";\nimport PropTypes from \"prop-types\";\nimport Moment from \"react-moment\";\n\nconst ProfileEducation = ({ education: {\n    school, degree, fieldofstudy, current, to, from, description\n} }) => {\n    return (\n        <Fragment>\n            <div>\n                <h3 className=\"text-dark\">{school}</h3>\n                <p><Moment format={'YYYY/MM/DD'}>{from}</Moment> - { current ? ' Current': <Moment format={'YYYY/MM/DD'}>{to}</Moment>}</p>\n                <p><strong>Degree: </strong>{degree}</p>\n                <p><strong>Field Of Study: </strong>{fieldofstudy}</p>\n                <p><strong>Description: </strong> {description}</p>\n            </div>\n        </Fragment>\n    )\n};\n\nProfileEducation.propTypes = {\n    education: PropTypes.object.isRequired\n};\n\nexport default ProfileEducation;","import React, {Fragment, useEffect} from \"react\";\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport {connect} from \"react-redux\";\nimport Spinner from \"../layout/Spinner\";\nimport ProfileTop from \"./ProfileTop\";\nimport ProfileAbout from \"./ProfileAbout\";\nimport ProfileExperience from \"./ProfileExperience\";\nimport ProfileEducation from \"./ProfileEducation\";\n// import ProfileGithub from \"./ProfileGithub\";\nimport { getProfileById } from \"../../actions/profile\";\n\nconst Profile = ({getProfileById, profile: { profile, loading }, auth, match}) => {\n    useEffect(() => {\n        getProfileById(match.params.id);\n    }, [getProfileById, match.params.id]);\n\n    return (\n        <Fragment>\n            {null === profile || loading ? <Spinner/> : <Fragment>\n                <Link to={'/developers'} className={'btn btn-light'}>\n                    Back To Developers\n                </Link>\n                {auth.isAuthenticated && false === auth.loading && auth.user.id === profile.user.id &&\n                (<Link to={'/edit-profile'} className={'btn btn-primary'}>Edit Profile</Link>)}\n                <div className=\"profile-grid my-1\">\n                    <ProfileTop profile={profile}/>\n                    <ProfileAbout profile={profile}/>\n\n                    <div className=\"profile-exp bg-white p-2\">\n                        <h2 className=\"text-primary\">Experience</h2>\n                        { profile.experience.length > 0 ? (\n                            <Fragment>\n                                {profile.experience.map(experience => (\n                                    <ProfileExperience\n                                        key={experience._id}\n                                        experience ={experience}\n                                    />\n                                ))}\n                            </Fragment>\n                        ):(<h4>No experience credentials</h4>)}\n                    </div>\n\n                    <div className=\"profile-edu bg-white p-2\">\n                        <h2 className=\"text-primary\">Education</h2>\n                        { profile.education.length > 0 ? (\n                            <Fragment>\n                                {profile.education.map(education => (\n                                    <ProfileEducation\n                                        key={education._id}\n                                        education={education}\n                                    />\n                                ))}\n                            </Fragment>\n                        ):(<h4>No education credentials</h4>)}\n                    </div>\n\n                    {/*{profile.githubusername && (*/}\n                    {/*    <ProfileGithub username={profile.githubusername} />*/}\n                    {/*)}*/}\n\n                </div>\n            </Fragment>}\n        </Fragment>\n    )\n};\n\nProfile.propTypes = {\n    getProfileById: PropTypes.func.isRequired,\n    profile: PropTypes.object.isRequired,\n    auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    profile: state.profile,\n    auth: state.auth\n});\n\nexport default connect(mapStateToProps, { getProfileById })(Profile);","import React from \"react\";\nimport {Redirect, Route} from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport {connect} from \"react-redux\";\nimport Spinner from \"../layout/Spinner\";\n\nconst PrivateRoute = ({component: Component, auth: {isAuthenticated, loading}, ...rest}) => (\n    <Route {...rest}\n           render={props => (loading ? <Spinner/> : !isAuthenticated ? <Redirect to={'/login'}/> :\n               <Component {...props} />)}/>\n);\n\nPrivateRoute.propTypes = {\n    auth: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);","import React, {Fragment} from \"react\";\nimport {Link} from 'react-router-dom';\n\nconst DashboardActions = () => {\n    return (\n        <Fragment>\n            <div className=\"dash-buttons\">\n                <Link to=\"/edit-profile\" className=\"btn btn-light\"\n                ><i className=\"fas fa-user-circle text-primary\"></i> Edit Profile</Link\n                >\n                <Link to=\"/add-experience\" className=\"btn btn-light\"\n                ><i className=\"fab fa-black-tie text-primary\"></i> Add Experience</Link\n                >\n                <Link to=\"/add-education\" className=\"btn btn-light\"\n                ><i className=\"fas fa-graduation-cap text-primary\"></i> Add Education</Link\n                >\n            </div>\n        </Fragment>\n    )\n};\n\nexport default DashboardActions;","import React, {Fragment} from \"react\";\nimport PropTypes from 'prop-types';\nimport Moment from \"react-moment\";\nimport { deleteExperience } from \"../../actions/profile\";\nimport {connect } from 'react-redux';\n\nconst Experience = ({ experience, deleteExperience }) => {\n    const experiences = experience.map(exp => (\n        <tr key={exp._id}>\n            <td>{exp.company}</td>\n            <td className={'hide-sm'}>{exp.title}</td>\n            <td className={'hide-sm'}>\n                <Moment format={'YYYY/MM/DD'}>{exp.from}</Moment> -{' '}\n                {null === exp.to ? (' Now'):(<Moment format={'YYYY/MM/DD'}>{exp.to}</Moment>)}\n            </td>\n            <td>\n                <button className=\"btn btn-danger\" onClick={()=>deleteExperience(exp._id)}>Delete</button>\n            </td>\n        </tr>\n    ));\n\n    return (\n        <Fragment>\n            <h2 className=\"my-2\">Experience Credentials</h2>\n            <table className=\"table\">\n                <thead>\n                    <tr>\n                        <th>Company</th>\n                        <th className={'hide-sm'}>Title</th>\n                        <th className={'hide-sm'}>Years</th>\n                        <th />\n                    </tr>\n                </thead>\n                <tbody>{experiences}</tbody>\n            </table>\n        </Fragment>\n    )\n}\n\nExperience.propTypes = {\n    experience: PropTypes.array.isRequired,\n    deleteExperience: PropTypes.func.isRequired\n}\n\nexport default connect(null, {deleteExperience})(Experience);","import React, {Fragment} from \"react\";\nimport PropTypes from 'prop-types';\nimport Moment from \"react-moment\";\nimport { deleteEducation } from '../../actions/profile';\nimport { connect } from 'react-redux';\n\nconst Education = ({ education, deleteEducation }) => {\n    const educations = education.map(edu => (\n        <tr key={edu._id}>\n            <td>{edu.school}</td>\n            <td className={'hide-sm'}>{edu.degree}</td>\n            <td className={'hide-sm'}>\n                <Moment format={'YYYY/MM/DD'}>{edu.from}</Moment> -{' '}\n                {null === edu.to ? ('Now'):(<Moment format={'YYYY/MM/DD'}>{edu.to}</Moment>)}\n            </td>\n            <td>\n                <button className=\"btn btn-danger\" onClick={ () => deleteEducation(edu._id) }>Delete</button>\n            </td>\n        </tr>\n    ));\n\n    return (\n        <Fragment>\n            <h2 className=\"my-2\">Education Credentials</h2>\n            <table className=\"table\">\n                <thead>\n                <tr>\n                    <th>School Name</th>\n                    <th className={'hide-sm'}>Degree</th>\n                    <th className={'hide-sm'}>Years</th>\n                    <th />\n                </tr>\n                </thead>\n                <tbody>{educations}</tbody>\n            </table>\n        </Fragment>\n    )\n}\n\nEducation.propTypes = {\n    education: PropTypes.array.isRequired,\n    deleteEducation: PropTypes.func.isRequired\n}\n\nexport default connect(null, {deleteEducation})(Education);","import React, {Fragment, useEffect} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport {connect} from \"react-redux\";\nimport Spinner from \"../layout/Spinner\";\nimport DashboardActions from \"./DashboardActions\";\nimport Experience from \"./Experience\";\nimport Education from \"./Education\";\nimport {deleteAccount, getCurrentProfile} from \"../../actions/profile\";\n\nconst Dashboard = ({getCurrentProfile, deleteAccount, auth: {user}, profile: {profile, loading}}) => {\n    useEffect(() => {\n        getCurrentProfile();\n    }, [getCurrentProfile]);\n\n    return loading && null === profile ? <Spinner/> : <Fragment>\n        <h1 className=\"large text-primary\">Dashboard</h1>\n        <p className=\"lead\">\n            <i className=\"fas fa-user\"></i> Welcome {user && user.name}\n        </p>\n        {null !== profile ? (\n            <Fragment>\n                <DashboardActions />\n                <Experience experience={profile.experience}/>\n                <Education education={profile.education}/>\n                <div className=\"my2\">\n                    <button className=\"btn btn-danger\" onClick={() => deleteAccount()}>\n                        <i className=\"fas fa-user-minus\"></i> {' '}\n                        Delete My Account\n                    </button>\n                </div>\n            </Fragment>\n        ): (\n            <Fragment>\n                <p>You have not yet setup a profile, please add some info</p>\n                <Link to={'/create-profile'} className={'btn btn-primary my-1'}>\n                    Create Profile\n                </Link>\n            </Fragment>\n        )}\n    </Fragment>;\n};\n\nDashboard.propTypes = {\n    getCurrentProfile: PropTypes.func.isRequired,\n    deleteAccount: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    profile: state.profile\n});\n\nexport default connect(mapStateToProps, {getCurrentProfile, deleteAccount})(Dashboard);","import React, {Fragment, useState} from \"react\";\nimport {Link, withRouter} from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport {createProfile} from \"../../actions/profile\";\n\nconst CreateProfile = ({ createProfile, history}) => {\n    const [formData, setFormData] = useState({\n        company: '',\n        website: '',\n        location: '',\n        status: '',\n        skills: '',\n        githubusername: '',\n        bio: '',\n        twitter: '',\n        facebook: '',\n        linkedin: '',\n        youtube: '',\n        instagram: ''\n    });\n\n    const [displaySocialInputs, toggleSocialInputs] = useState(false);\n\n    const {\n        company,\n        website,\n        location,\n        status,\n        skills,\n        githubusername,\n        bio,\n        twitter,\n        facebook,\n        linkedin,\n        youtube,\n        instagram\n    } = formData;\n\n    const onChange = e => setFormData({...formData, [e.target.name]: e.target.value});\n\n    const onSubmit = e => {\n        e.preventDefault();\n        createProfile(formData, history);\n    }\n\n    return (\n        <Fragment>\n            <h1 className=\"large text-primary\">\n                Create Your Profile\n            </h1>\n            <p className=\"lead\">\n                <i className=\"fas fa-user\"></i> Let's get some information to make your\n                profile stand out\n            </p>\n            <small>* = required field</small>\n            <form className=\"form\" onSubmit={ e => onSubmit(e)}>\n                <div className=\"form-group\">\n                    <select name=\"status\" value={status} onChange={e=>onChange(e)}>\n                        <option value=\"0\">* Select Professional Status</option>\n                        <option value=\"Developer\">Developer</option>\n                        <option value=\"Junior Developer\">Junior Developer</option>\n                        <option value=\"Senior Developer\">Senior Developer</option>\n                        <option value=\"Manager\">Manager</option>\n                        <option value=\"Student or Learning\">Student or Learning</option>\n                        <option value=\"Instructor\">Instructor or Teacher</option>\n                        <option value=\"Intern\">Intern</option>\n                        <option value=\"Other\">Other</option>\n                    </select>\n                    <small className=\"form-text\"\n                    >Give us an idea of where you are at in your career</small\n                    >\n                </div>\n                <div className=\"form-group\">\n                    <input type=\"text\" placeholder=\"Company\" name=\"company\" value={company}\n                           onChange={e => onChange(e)}/>\n                    <small className=\"form-text\"\n                    >Could be your own company or one you work for</small\n                    >\n                </div>\n                <div className=\"form-group\">\n                    <input type=\"text\" placeholder=\"Website\" name=\"website\" value={website}\n                           onChange={e => onChange(e)}/>\n                    <small className=\"form-text\"\n                    >Could be your own or a company website</small\n                    >\n                </div>\n                <div className=\"form-group\">\n                    <input type=\"text\" placeholder=\"Location\" name=\"location\" value={location}\n                           onChange={e => onChange(e)}/>\n                    <small className=\"form-text\"\n                    >City & state suggested (eg. Boston, MA)</small\n                    >\n                </div>\n                <div className=\"form-group\">\n                    <input type=\"text\" placeholder=\"* Skills\" name=\"skills\" value={skills} onChange={e => onChange(e)}/>\n                    <small className=\"form-text\"\n                    >Please use comma separated values (eg.\n                        HTML,CSS,JavaScript,PHP)</small\n                    >\n                </div>\n                <div className=\"form-group\">\n                    <input\n                        type=\"text\"\n                        placeholder=\"Github Username\"\n                        name=\"githubusername\"\n                        value={githubusername} onChange={e => onChange(e)}\n                    />\n                    <small className=\"form-text\"\n                    >If you want your latest repos and a Github link, include your\n                        username</small\n                    >\n                </div>\n                <div className=\"form-group\">\n                    <textarea placeholder=\"A short bio of yourself\" name=\"bio\" value={bio}\n                              onChange={e => onChange(e)}></textarea>\n                    <small className=\"form-text\">Tell us a little about yourself</small>\n                </div>\n\n                <div className=\"my-2\">\n                    <button type=\"button\" className=\"btn btn-light\"\n                            onClick={() => toggleSocialInputs(!displaySocialInputs)}>\n                        Add Social Network Links\n                    </button>\n                    <span>Optional</span>\n                </div>\n\n                {displaySocialInputs && <Fragment>\n                    <div className=\"form-group social-input\">\n                        <i className=\"fab fa-twitter fa-2x\"></i>\n                        <input type=\"text\" placeholder=\"Twitter URL\" name=\"twitter\" value={twitter}\n                               onChange={e => onChange(e)}/>\n                    </div>\n\n                    <div className=\"form-group social-input\">\n                        <i className=\"fab fa-facebook fa-2x\"></i>\n                        <input type=\"text\" placeholder=\"Facebook URL\" name=\"facebook\" value={facebook}\n                               onChange={e => onChange(e)}/>\n                    </div>\n\n                    <div className=\"form-group social-input\">\n                        <i className=\"fab fa-youtube fa-2x\"></i>\n                        <input type=\"text\" placeholder=\"YouTube URL\" name=\"youtube\" value={youtube}\n                               onChange={e => onChange(e)}/>\n                    </div>\n\n                    <div className=\"form-group social-input\">\n                        <i className=\"fab fa-linkedin fa-2x\"></i>\n                        <input type=\"text\" placeholder=\"Linkedin URL\" name=\"linkedin\" value={linkedin}\n                               onChange={e => onChange(e)}/>\n                    </div>\n\n                    <div className=\"form-group social-input\">\n                        <i className=\"fab fa-instagram fa-2x\"></i>\n                        <input type=\"text\" placeholder=\"Instagram URL\" name=\"instagram\" value={instagram}\n                               onChange={e => onChange(e)}/>\n                    </div>\n                </Fragment>}\n                <input type=\"submit\" className=\"btn btn-primary my-1\"/>\n                <Link className=\"btn btn-light my-1\" to=\"/dashboard\">Go Back</Link>\n            </form>\n        </Fragment>\n    );\n}\n\nCreateProfile.propTypes = {\n    createProfile: PropTypes.func.isRequired\n};\n\nexport default connect(null, { createProfile })(withRouter(CreateProfile));","import React, {Fragment, useState, useEffect} from \"react\";\nimport {Link, withRouter} from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport {createProfile, getCurrentProfile} from \"../../actions/profile\";\n\nconst EditProfile = ({\n         profile: {profile, loading},\n         createProfile,\n         getCurrentProfile,\n         history\n     }) => {\n\n    const [formData, setFormData] = useState({\n        company: '',\n        website: '',\n        location: '',\n        status: '',\n        skills: '',\n        githubusername: '',\n        bio: '',\n        twitter: '',\n        facebook: '',\n        linkedin: '',\n        youtube: '',\n        instagram: ''\n    });\n\n    const [displaySocialInputs, toggleSocialInputs] = useState(false);\n\n    useEffect(() => {\n        getCurrentProfile();\n\n        setFormData({\n            company: loading || !profile.company ? '' : profile.company,\n            website: loading || !profile.website ? '' : profile.website,\n            location: loading || !profile.location ? '' : profile.location,\n            status: loading || !profile.status ? '' : profile.status,\n            skills: loading || !profile.skills ? '' : profile.skills.join(', '),\n            githubusername: loading || !profile.githubusername ? '' : profile.githubusername,\n            bio: loading || !profile.bio ? '' : profile.bio,\n            twitter: loading || !profile.social.twitter ? '' : profile.social.twitter,\n            facebook: loading || !profile.social.facebook ? '' : profile.social.facebook,\n            linkedin: loading || !profile.social.linkedin ? '' : profile.social.linkedin,\n            youtube: loading || !profile.social.youtube ? '' : profile.social.youtube,\n            instagram: loading || !profile.social.instagram ? '' : profile.social.instagram\n        });\n        // eslint-disable-next-line\n    }, [loading, getCurrentProfile]);\n\n    const {\n        company,\n        website,\n        location,\n        status,\n        skills,\n        githubusername,\n        bio,\n        twitter,\n        facebook,\n        linkedin,\n        youtube,\n        instagram\n    } = formData;\n\n    const onChange = e => setFormData({...formData, [e.target.name]: e.target.value});\n\n    const onSubmit = e => {\n        e.preventDefault();\n        createProfile(formData, history, true);\n    }\n\n    return (\n        <Fragment>\n            <h1 className=\"large text-primary\">\n                Create Your Profile\n            </h1>\n            <p className=\"lead\">\n                <i className=\"fas fa-user\"></i> Let's get some information to make your\n                profile stand out\n            </p>\n            <small>* = required field</small>\n            <form className=\"form\" onSubmit={e => onSubmit(e)}>\n                <div className=\"form-group\">\n                    <select name=\"status\" value={status} onChange={e => onChange(e)}>\n                        <option value=\"0\">* Select Professional Status</option>\n                        <option value=\"Developer\">Developer</option>\n                        <option value=\"Junior Developer\">Junior Developer</option>\n                        <option value=\"Senior Developer\">Senior Developer</option>\n                        <option value=\"Manager\">Manager</option>\n                        <option value=\"Student or Learning\">Student or Learning</option>\n                        <option value=\"Instructor\">Instructor or Teacher</option>\n                        <option value=\"Intern\">Intern</option>\n                        <option value=\"Other\">Other</option>\n                    </select>\n                    <small className=\"form-text\"\n                    >Give us an idea of where you are at in your career</small\n                    >\n                </div>\n                <div className=\"form-group\">\n                    <input type=\"text\" placeholder=\"Company\" name=\"company\" value={company}\n                           onChange={e => onChange(e)}/>\n                    <small className=\"form-text\"\n                    >Could be your own company or one you work for</small\n                    >\n                </div>\n                <div className=\"form-group\">\n                    <input type=\"text\" placeholder=\"Website\" name=\"website\" value={website}\n                           onChange={e => onChange(e)}/>\n                    <small className=\"form-text\"\n                    >Could be your own or a company website</small\n                    >\n                </div>\n                <div className=\"form-group\">\n                    <input type=\"text\" placeholder=\"Location\" name=\"location\" value={location}\n                           onChange={e => onChange(e)}/>\n                    <small className=\"form-text\"\n                    >City & state suggested (eg. Boston, MA)</small\n                    >\n                </div>\n                <div className=\"form-group\">\n                    <input type=\"text\" placeholder=\"* Skills\" name=\"skills\" value={skills} onChange={e => onChange(e)}/>\n                    <small className=\"form-text\"\n                    >Please use comma separated values (eg.\n                        HTML,CSS,JavaScript,PHP)</small\n                    >\n                </div>\n                <div className=\"form-group\">\n                    <input\n                        type=\"text\"\n                        placeholder=\"Github Username\"\n                        name=\"githubusername\"\n                        value={githubusername} onChange={e => onChange(e)}\n                    />\n                    <small className=\"form-text\"\n                    >If you want your latest repos and a Github link, include your\n                        username</small\n                    >\n                </div>\n                <div className=\"form-group\">\n                    <textarea placeholder=\"A short bio of yourself\" name=\"bio\" value={bio}\n                              onChange={e => onChange(e)}></textarea>\n                    <small className=\"form-text\">Tell us a little about yourself</small>\n                </div>\n\n                <div className=\"my-2\">\n                    <button type=\"button\" className=\"btn btn-light\"\n                            onClick={() => toggleSocialInputs(!displaySocialInputs)}>\n                        Add Social Network Links\n                    </button>\n                    <span>Optional</span>\n                </div>\n\n                {displaySocialInputs && <Fragment>\n                    <div className=\"form-group social-input\">\n                        <i className=\"fab fa-twitter fa-2x\"></i>\n                        <input type=\"text\" placeholder=\"Twitter URL\" name=\"twitter\" value={twitter}\n                               onChange={e => onChange(e)}/>\n                    </div>\n\n                    <div className=\"form-group social-input\">\n                        <i className=\"fab fa-facebook fa-2x\"></i>\n                        <input type=\"text\" placeholder=\"Facebook URL\" name=\"facebook\" value={facebook}\n                               onChange={e => onChange(e)}/>\n                    </div>\n\n                    <div className=\"form-group social-input\">\n                        <i className=\"fab fa-youtube fa-2x\"></i>\n                        <input type=\"text\" placeholder=\"YouTube URL\" name=\"youtube\" value={youtube}\n                               onChange={e => onChange(e)}/>\n                    </div>\n\n                    <div className=\"form-group social-input\">\n                        <i className=\"fab fa-linkedin fa-2x\"></i>\n                        <input type=\"text\" placeholder=\"Linkedin URL\" name=\"linkedin\" value={linkedin}\n                               onChange={e => onChange(e)}/>\n                    </div>\n\n                    <div className=\"form-group social-input\">\n                        <i className=\"fab fa-instagram fa-2x\"></i>\n                        <input type=\"text\" placeholder=\"Instagram URL\" name=\"instagram\" value={instagram}\n                               onChange={e => onChange(e)}/>\n                    </div>\n                </Fragment>}\n                <input type=\"submit\" className=\"btn btn-primary my-1\"/>\n                <Link className=\"btn btn-light my-1\" to=\"/dashboard\">Go Back</Link>\n            </form>\n        </Fragment>\n    );\n}\n\nEditProfile.propTypes = {\n    createProfile: PropTypes.func.isRequired,\n    getCurrentProfile: PropTypes.func.isRequired,\n    profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    profile: state.profile\n});\n\nexport default connect(\n    mapStateToProps,\n    {createProfile, getCurrentProfile}\n)(withRouter(EditProfile)\n);","import React, {Fragment, useState} from \"react\";\nimport {Link, withRouter} from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport {addExperience} from \"../../actions/profile\";\n\nconst AddExperience = ({addExperience, history}) => {\n    const [formData, setFormData] = useState({\n        company:'',\n        title:'',\n        location: '',\n        from: '',\n        to: '',\n        current: false,\n        description: ''\n    });\n\n    const [toDateDisabled, toggleDisabled] = useState(false);\n\n    const{company, title, location, from, to, current, description } = formData;\n\n    const onChange = e => setFormData({...formData, [e.target.name]: e.target.value});\n\n    const onSubmit = e => {\n        e.preventDefault();\n        addExperience(formData, history);\n    }\n\n    return (\n        <Fragment>\n            <h1 className=\"large text-primary\">\n                Add An Experience\n            </h1>\n            <p className=\"lead\">\n                <i className=\"fas fa-code-branch\"></i> Add any developer/programming\n                positions that you have had in the past\n            </p>\n            <small>* = required field</small>\n            <form className=\"form\" onSubmit={e => onSubmit(e)}>\n                <div className=\"form-group\">\n                    <input type=\"text\" placeholder=\"* Job Title\" name=\"title\" value={title} onChange={e=>onChange(e)} required/>\n                </div>\n                <div className=\"form-group\">\n                    <input type=\"text\" placeholder=\"* Company\" name=\"company\" value={company} onChange={e=>onChange(e)} required/>\n                </div>\n                <div className=\"form-group\">\n                    <input type=\"text\" placeholder=\"Location\" name=\"location\" value={location} onChange={e=>onChange(e)}/>\n                </div>\n                <div className=\"form-group\">\n                    <h4>From Date</h4>\n                    <input type=\"date\" name=\"from\" value={from} onChange={e=>onChange(e)}/>\n                </div>\n                <div className=\"form-group\">\n                    <p><input type=\"checkbox\" name=\"current\" checked={current} value={current} onChange={e => {\n                        setFormData({...formData, current: !current});\n                        toggleDisabled(!toDateDisabled)\n                    }}\n                    /> Current Job</p>\n                </div>\n                <div className=\"form-group\">\n                    <h4>To Date</h4>\n                    <input type=\"date\" name=\"to\" value={to} onChange={e=>onChange(e)} disabled={toDateDisabled ? 'disabled' : ''}/>\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                      name=\"description\"\n                      cols=\"30\"\n                      rows=\"5\"\n                      placeholder=\"Job Description\"\n                      value={description} onChange={e=>onChange(e)}\n                  ></textarea>\n                </div>\n                <input type=\"submit\" className=\"btn btn-primary my-1\"/>\n                <Link className=\"btn btn-light my-1\" to=\"/dashboard\">Go Back</Link>\n            </form>\n        </Fragment>\n    )\n}\n\nAddExperience.propTypes = {\n    addExperience: PropTypes.func.isRequired\n}\n\nexport default connect(null, { addExperience })(withRouter(AddExperience));","import React, {Fragment, useState} from \"react\";\nimport {Link, withRouter} from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport {addEducation} from \"../../actions/profile\";\n\nconst AddEducation = ({addEducation, history}) => {\n    const [formData, setFormData] = useState({\n        school:'',\n        degree:'',\n        fieldofstudy: '',\n        from: '',\n        to: '',\n        current: false,\n        description: ''\n    });\n\n    const [toDateDisabled, toggleDisabled] = useState(false);\n\n    const{school, degree, fieldofstudy, from, to, current, description } = formData;\n\n    const onChange = e => setFormData({...formData, [e.target.name]: e.target.value});\n\n    const onSubmit = e => {\n        e.preventDefault();\n        addEducation(formData, history);\n    }\n\n    return (\n        <Fragment>\n            <h1 className=\"large text-primary\">\n                Add Your Education\n            </h1>\n            <p className=\"lead\">\n                <i className=\"fas fa-code-branch\"></i> Add any developer/programming\n                positions that you have had in the past\n            </p>\n            <small>* = required field</small>\n            <form className=\"form\" onSubmit={e => onSubmit(e)}>\n                <div className=\"form-group\">\n                    <input type=\"text\" placeholder=\"* School or Bootcamp\" name=\"school\" value={school} onChange={e=>onChange(e)} required/>\n                </div>\n                <div className=\"form-group\">\n                    <input type=\"text\" placeholder=\"* Degree\" name=\"degree\" value={degree} onChange={e=>onChange(e)} required/>\n                </div>\n                <div className=\"form-group\">\n                    <input type=\"text\" placeholder=\"Field of Study\" name=\"fieldofstudy\" value={fieldofstudy} onChange={e=>onChange(e)}/>\n                </div>\n                <div className=\"form-group\">\n                    <h4>From Date</h4>\n                    <input type=\"date\" name=\"from\" value={from} onChange={e=>onChange(e)}/>\n                </div>\n                <div className=\"form-group\">\n                    <p><input type=\"checkbox\" name=\"current\" checked={current} value={current} onChange={e => {\n                        setFormData({...formData, current: !current});\n                        toggleDisabled(!toDateDisabled)\n                    }}\n                    /> Current School</p>\n                </div>\n                <div className=\"form-group\">\n                    <h4>To Date</h4>\n                    <input type=\"date\" name=\"to\" value={to} onChange={e=>onChange(e)} disabled={toDateDisabled ? 'disabled' : ''}/>\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                      name=\"description\"\n                      cols=\"30\"\n                      rows=\"5\"\n                      placeholder=\"School Description\"\n                      value={description} onChange={e=>onChange(e)}\n                  ></textarea>\n                </div>\n                <input type=\"submit\" className=\"btn btn-primary my-1\"/>\n                <Link className=\"btn btn-light my-1\" to=\"/dashboard\">Go Back</Link>\n            </form>\n        </Fragment>\n    )\n}\n\nAddEducation.propTypes = {\n    addEducation: PropTypes.func.isRequired\n}\n\nexport default connect(null, { addEducation })(withRouter(AddEducation));","import React, {Fragment} from 'react';\nimport PropTypes from 'prop-types';\nimport {Link} from 'react-router-dom';\nimport Moment from 'react-moment';\nimport {connect} from 'react-redux';\nimport {addLike, removeLike, deletePost} from '../../actions/post';\n\nconst PostItem = ({\n    addLike,\n    removeLike,\n    auth,\n    deletePost,\n    post: {  _id, text, name, avatar, user, likes, comments, date },\n    showActions\n    }) => {\n    return (<div className=\"post bg-white p-1 my-1\">\n        <div>\n\n            <Link to={`/profile/${user}`}>\n                <img\n                    className=\"round-img\"\n                    src={avatar}\n                    alt={name}\n                />\n                <h4>{name}</h4>\n            </Link>\n        </div>\n        <div>\n            <p className=\"my-1\">{text}</p>\n            <p className=\"post-date\">\n                Posted on <Moment format={'YYYY/MM/DD'}>{date}</Moment>\n            </p>\n            {showActions && <Fragment>\n                <button onClick={e => addLike(_id)} type=\"button\" className=\"btn btn-light\">\n                    <i className=\"fas fa-thumbs-up\"></i>\n                    <span> {likes.length > 0 && (\n                        <span className=\"comment-count\">{likes.length}</span>\n                    )}</span>\n                </button>\n                <button onClick={e => removeLike(_id)} type=\"button\" className=\"btn btn-light\">\n                    <i className=\"fas fa-thumbs-down\"></i>\n                </button>\n                <Link to={`/posts/${_id}`} className=\"btn btn-primary\">\n                    Discussion {' '}\n                    {comments.length > 0 && (\n                        <span className='comment-count'>{comments.length}</span>\n                    )}\n                </Link>\n                {!auth.loading && user === auth.user._id && (\n                    <button\n                        onClick={ () => deletePost(_id) }\n                        type=\"button\"\n                        className=\"btn btn-danger\"\n                    >\n                        <i className=\"fas fa-times\"></i>\n                    </button>\n                )}\n            </Fragment>}\n        </div>\n    </div>);\n};\n\nPostItem.defaultProps = {\n    showActions: true\n}\n\nPostItem.propTypes = {\n    auth: PropTypes.object.isRequired,\n    post: PropTypes.object.isRequired,\n    addLike: PropTypes.func.isRequired,\n    removeLike: PropTypes.func.isRequired,\n    deletePost: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n});\n\nexport default connect(mapStateToProps, { addLike, removeLike, deletePost })(PostItem);","import axios from 'axios';\nimport {setAlert} from './alert';\nimport {\n    DELETE_POST,\n    GET_POSTS,\n    POST_ERROR,\n    UPDATE_LIKES,\n    ADD_POST,\n    GET_POST,\n    ADD_COMMENT,\n    REMOVE_COMMENT\n} from './types';\n\n// Get posts\nexport const getPosts = () => async dispatch => {\n    try {\n        const res = await axios.get('/api/posts');\n\n        dispatch({\n            type: GET_POSTS,\n            payload: res.data\n        });\n\n    } catch (err) {\n        dispatch({\n            type: POST_ERROR,\n            payload: {msg: err.response.statusText, status: err.response.status}\n        });\n    }\n};\n\n// Add like\nexport const addLike = id => async dispatch => {\n    try {\n        const res = await axios.put(`/api/posts/like/${id}`);\n\n        dispatch({\n            type: UPDATE_LIKES,\n            payload: {id, likes: res.data}\n        });\n\n    } catch (err) {\n        dispatch({\n            type: POST_ERROR,\n            payload: {msg: err.response.statusText, status: err.response.status}\n        });\n    }\n};\n\n// Remove like\nexport const removeLike = id => async dispatch => {\n    try {\n        const res = await axios.put(`/api/posts/unlike/${id}`);\n\n        dispatch({\n            type: UPDATE_LIKES,\n            payload: {id, likes: res.data}\n        });\n\n    } catch (err) {\n        dispatch({\n            type: POST_ERROR,\n            payload: {msg: err.response.statusText, status: err.response.status}\n        });\n    }\n};\n\n// Delete post\nexport const deletePost = id => async dispatch => {\n    try {\n        await axios.delete(`/api/posts/${id}`);\n\n        dispatch({\n            type: DELETE_POST,\n            payload: id\n        });\n\n        dispatch(setAlert('Post Removed', 'success'));\n    } catch (err) {\n        dispatch({\n            type: POST_ERROR,\n            payload: {msg: err.response.statusText, status: err.response.status}\n        });\n    }\n};\n\n// Add post\nexport const addPost = formData => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    };\n\n    try {\n        const res = await axios.post('/api/posts', formData, config);\n\n        dispatch({\n            type: ADD_POST,\n            payload: res.data\n        });\n\n        dispatch(setAlert('Post created', 'success'));\n    } catch (err) {\n        dispatch({\n            type: POST_ERROR,\n            payload: {msg: err.response.statusText, status: err.response.status}\n        });\n    }\n};\n\n// Get post\nexport const getPost = id => async dispatch => {\n    try {\n        const res = await axios.get(`/api/posts/${id}`);\n\n        dispatch({\n            type: GET_POST,\n            payload: res.data\n        });\n\n    } catch (err) {\n        dispatch({\n            type: POST_ERROR,\n            payload: {msg: err.response.statusText, status: err.response.status}\n        });\n    }\n};\n\n// Add comment\nexport const addComment = (postId, formData) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    };\n\n    try {\n        const res = await axios.post(`/api/posts/comment/${postId}`, formData, config);\n\n        dispatch({\n            type: ADD_COMMENT,\n            payload: res.data\n        });\n\n        dispatch(setAlert('Comment added', 'success'));\n    } catch (err) {\n        dispatch({\n            type: POST_ERROR,\n            payload: {msg: err.response.statusText, status: err.response.status}\n        });\n    }\n};\n\n\n// Delete comment\nexport const deleteComment = (postId, commentId) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    };\n\n    try {\n        await axios.delete(`/api/posts/comment/${postId}/${commentId}`, config);\n\n        dispatch({\n            type: REMOVE_COMMENT,\n            payload: commentId\n        });\n\n        dispatch(setAlert('Comment removed', 'success'));\n    } catch (err) {\n        dispatch({\n            type: POST_ERROR,\n            payload: {msg: err.response.statusText, status: err.response.status}\n        });\n    }\n};","import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\nimport { addPost } from '../../actions/post';\nimport { connect } from \"react-redux\";\n\nconst PostForm = ({ addPost }) => {\n    const [text, setText] = useState('');\n\n    return (\n        <div className=\"post-form\">\n            <div className=\"bg-primary p\">\n                <h3>Say Something...</h3>\n            </div>\n            <form className=\"form my-1\" onSubmit={e=> {\n                e.preventDefault();\n                addPost({text});\n                setText('');\n            }}>\n          <textarea\n              name=\"text\"\n              cols=\"30\"\n              rows=\"5\"\n              placeholder=\"Create a post\"\n              value={text}\n              onChange={e => setText(e.target.value)}\n              required\n          ></textarea>\n                <input type=\"submit\" className=\"btn btn-dark my-1\" value=\"Submit\"/>\n            </form>\n        </div>\n    );\n};\n\nPostForm.propTypes = {\n    addPost: PropTypes.func.isRequired\n};\n\nexport default connect(null, { addPost })(PostForm);","import React, {Fragment, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport PostItem from './PostItem';\nimport { getPosts } from '../../actions/post';\nimport PostForm from './PostForm';\n\nfunction Posts({ getPosts, post: { posts, loading} }) {\n    useEffect(() => {\n        getPosts();\n    }, [getPosts]);\n\n    return loading ? <Spinner/> : <Fragment>\n        <h1 className=\"large text-primary\">Posts</h1>\n        <p className=\"lead\">\n            <i className=\"fas fa-user\"></i> Welcome to the comunity\n        </p>\n        <PostForm />\n        {posts.map(post => (\n            <PostItem key={post._id} post={post}/>\n        ))}\n    </Fragment>;\n}\n\nPosts.propTypes = {\n    getPosts: PropTypes.func.isRequired,\n    post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    post: state.post\n})\n\nexport default connect(mapStateToProps, { getPosts })(Posts);","import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport {addComment} from '../../actions/post';\n\nconst CommentForm = ({postId,  addComment }) => {\n    const [text, setText ] = useState('');\n    return (\n        <div className=\"post-form\">\n            <div className=\"bg-primary p\">\n                <h3>Leave a Comment</h3>\n            </div>\n            <form className=\"form my-1\" onSubmit={e=> {\n                e.preventDefault();\n                addComment(postId, {text});\n                setText('');\n            }}>\n          <textarea\n              name=\"text\"\n              cols=\"30\"\n              rows=\"5\"\n              placeholder=\"Create a post\"\n              value={text}\n              onChange={e => setText(e.target.value)}\n              required\n          ></textarea>\n                <input type=\"submit\" className=\"btn btn-dark my-1\" value=\"Submit\"/>\n            </form>\n        </div>\n    );\n};\n\nCommentForm.propTypes = {\n    addComment: PropTypes.func.isRequired\n};\n\nexport default connect(null, { addComment })(CommentForm);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Link} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport Moment from 'react-moment';\nimport {deleteComment} from '../../actions/post';\n\nconst CommentItem = ({\n     postId,\n     auth,\n     comment: {_id, text, name, avatar, user, date},\n     deleteComment\n }) => {\n    return (\n        <div className=\"post bg-white p-1 my-1\">\n            <div>\n                <Link to={`/profile/${user}`}>\n                    <img\n                        className=\"round-img\"\n                        src={avatar}\n                        alt={name}\n                    />\n                    <h4>{name}</h4>\n                </Link>\n            </div>\n            <div>\n                <p className=\"my-1\">{text}</p>\n                <p className=\"post-date\">\n                    Posted on <Moment format={'YYYY/MM/DD'}>{date}</Moment>\n                </p>\n                {!auth.loading && user === auth.user._id && (\n                    <button onClick={e => deleteComment(postId, _id)} type=\"button\" className={'btn btn-danger'}>\n                        <span className=\"fas fa-times\"></span>\n                    </button>\n                )}\n            </div>\n        </div>\n    );\n};\n\nCommentItem.propTypes = {\n    postId: PropTypes.string.isRequired,\n    comment: PropTypes.object.isRequired,\n    auth: PropTypes.object.isRequired,\n    deleteComment: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n});\nexport default connect(mapStateToProps, {deleteComment})(CommentItem);","import React, {Fragment, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Spinner from '../layout/Spinner';\nimport PostItem from '../posts/PostItem';\nimport { getPost } from '../../actions/post';\nimport CommentForm from './CommentForm';\nimport CommentItem from './CommentItem';\n\nconst Post = ({ getPost, post: { post, loading }, match }) => {\n    useEffect(() => {\n        getPost(match.params.id)\n    }, [getPost, match.params.id]);\n\n    return loading || post === null ? <Spinner/> : <Fragment>\n        <Link to={'/posts'} className={'btn'}>Back To Posts</Link>\n        <PostItem post={post} showActions={false}/>\n        <CommentForm postId={post._id} />\n        <div className=\"comments\">\n            {post.comments.map(comment => (\n                <CommentItem key={comment._id} comment={comment} postId={post._id} />\n            ))}\n        </div>\n    </Fragment>\n};\n\nPost.propTypes = {\n    getPost: PropTypes.func.isRequired,\n    post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    post: state.post\n});\n\nexport default connect(mapStateToProps, { getPost })(Post);","import React, {Fragment} from 'react';\n\nconst NotFound = () => {\n    return (\n        <Fragment>\n            <h1 className=\"x-large text-primary\">\n                <i className=\"fas fa-exclamation-triangle\"></i>\n                Page Not Found\n            </h1>\n            <p className=\"large\">Sorry, this page does not exits</p>\n        </Fragment>\n    );\n};\n\nexport default NotFound;","import React from 'react';\nimport Alert from \"../layout/Alert\";\nimport {Route, Switch} from \"react-router-dom\";\nimport Register from \"../auth/Register\";\nimport Login from \"../auth/Login\";\nimport Profiles from \"../profiles/Profiles\";\nimport Profile from \"../profile/Profile\";\nimport PrivateRoute from \"./PrivateRoute\";\nimport Dashboard from \"../dashboard/Dashboard\";\nimport CreateProfile from \"../profile-forms/CreateProfile\";\nimport EditProfile from \"../profile-forms/EditProfile\";\nimport AddExperience from \"../profile-forms/AddExperience\";\nimport AddEducation from \"../profile-forms/AddEducation\";\nimport Posts from \"../posts/Posts\";\nimport Post from \"../post/Post\";\nimport NotFound from \"../layout/NotFound\";\n\nconst Routes = (component) => {\n    return (\n        <section className='container'>\n            <Alert/>\n            <Switch>\n                <Route exact path='/register' component={Register}/>\n                <Route exact path='/login' component={Login}/>\n                <Route exact path='/developers' component={Profiles}/>\n                <Route exact path='/profile/:id' component={Profile}/>\n                <PrivateRoute exact path='/dashboard' component={Dashboard} />\n                <PrivateRoute exact path='/create-profile' component={CreateProfile} />\n                <PrivateRoute exact path='/edit-profile' component={EditProfile} />\n                <PrivateRoute exact path='/add-experience' component={AddExperience} />\n                <PrivateRoute exact path='/add-education' component={AddEducation} />\n                <PrivateRoute exact path='/posts' component={Posts} />\n                <PrivateRoute exact path='/posts/:id' component={Post} />\n                <Route component={NotFound} />\n            </Switch>\n        </section>\n    );\n};\n\nexport default Routes;","import {REMOVE_ALERT, SET_ALERT} from \"../actions/types\";\n\nconst initialState = [];\n\nexport default function (state = initialState, action) {\n    const {type, payload} = action;\n\n    switch (type) {\n        case SET_ALERT:\n            return [...state, action.payload];\n        case REMOVE_ALERT:\n            return state.filter(alert => alert.id !== payload);\n        default:\n            return state;\n    }\n}","import {\n    REGISTER_SUCCESS,\n    REGISTER_FAIL,\n    USER_LOADED,\n    AUTH_ERROR,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    LOGOUT,\n    ACCOUNT_DELETE\n} from \"../actions/types\";\n\nconst initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: null,\n    loading: true,\n    user: null\n}\n\nexport default function(state = initialState, action ) {\n    const { type, payload } = action;\n    switch (type) {\n        case USER_LOADED:\n            return {\n                ...state,\n                isAuthenticated: true,\n                loading: false,\n                user: payload\n            }\n        case REGISTER_SUCCESS:\n        case LOGIN_SUCCESS:\n            localStorage.setItem('token', payload.token );\n            return {\n                ...state,\n                ...payload,\n                isAuthenticated: true,\n                loading: false\n            }\n        case REGISTER_FAIL:\n        case AUTH_ERROR:\n        case LOGIN_FAIL:\n        case LOGOUT:\n        case ACCOUNT_DELETE:\n            localStorage.removeItem('token');\n            return {\n                ...state,\n                token: null,\n                isAuthenticated: false,\n                loading: false\n            }\n        default:\n            return state;\n    }\n}","import {\n    GET_PROFILE,\n    GET_PROFILES,\n    PROFILE_ERROR,\n    CLEAR_PROFILE,\n    UPDATE_PROFILE,\n    GET_REPOS\n} from \"../actions/types\";\n\nconst initialState = {\n    profile: null,\n    profiles: [],\n    repos: [],\n    loading: true,\n    error: {}\n};\n\nexport default function (state = initialState, action) {\n    const {type, payload } = action;\n    switch (type) {\n        case GET_PROFILE:\n        case UPDATE_PROFILE:\n            return {\n                ...state,\n                profile: payload,\n                loading: false\n            };\n        case GET_PROFILES:\n            return {\n                ...state,\n                profiles: payload,\n                loading: false\n            };\n        case PROFILE_ERROR:\n            return {\n                ...state,\n                error: payload,\n                profile: null,\n                loading: false\n            };\n        case CLEAR_PROFILE:\n            return {\n                ...state,\n                profile: null,\n                repos: [],\n                loading: false\n            };\n        case GET_REPOS:\n            return {\n                ...state,\n                repos: payload,\n                loading: false\n            };\n        default:\n            return state;\n    }\n}","import {\n    GET_POSTS,\n    POST_ERROR,\n    UPDATE_LIKES,\n    DELETE_POST,\n    ADD_POST,\n    GET_POST,\n    ADD_COMMENT,\n    REMOVE_COMMENT\n} from '../actions/types';\n\nconst initialState = {\n    posts: [],\n    post: null,\n    loading: true,\n    error: {}\n};\n\nexport default function (state = initialState, action) {\n    const {type, payload} = action;\n\n    switch (type) {\n\n        case GET_POSTS:\n            return {\n                ...state,\n                posts: payload,\n                loading: false\n            };\n        case GET_POST:\n            return {\n                ...state,\n                post: payload,\n                loading: false\n            };\n        case DELETE_POST:\n            return {\n                ...state,\n                posts: state.posts.filter(post => post._id !== payload ),\n                loading: false\n            };\n        case ADD_POST:\n            return {\n                ...state,\n                posts: [payload, ...state.posts],\n                loading: false\n            };\n        case POST_ERROR:\n            return {\n                ...state,\n                error: payload,\n                loading: false\n            };\n        case UPDATE_LIKES:\n            return {\n                ...state,\n                posts: state.posts.map(post =>\n                    post._id === payload.id ? {...post, likes: payload.likes} : post),\n                loading: false\n            };\n        case ADD_COMMENT:\n            return {\n                ...state,\n                post: { ...state.post, comments: payload },\n                loading: false\n            };\n        case REMOVE_COMMENT:\n            return {\n                ...state,\n                post: {\n                    ...state.post,\n                    comments: state.post.comments.filter( comment => comment._id !== payload)\n                },\n                loading: false\n            };\n        default:\n            return state;\n    }\n}\n\n","import {combineReducers} from 'redux';\nimport alert from './alert';\nimport auth from './auth';\nimport profile from './profile';\nimport post from './post';\n\nexport default combineReducers({\n    alert,\n    auth,\n    profile,\n    post\n});","import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n    rootReducer,\n    initialState,\n    composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import React, {Fragment, useEffect} from 'react';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Landing from './components/layout/Landing';\nimport Routes from './components/routing/Routes'\n\n// Redux\nimport {Provider} from 'react-redux';\nimport store from './store';\nimport {loadUser} from './actions/auth';\nimport setAuthToken from './utils/setAuthToken';\n\nimport './App.css';\n\n\nif (localStorage.token) {\n    setAuthToken(localStorage.token);\n}\n\nconst App = () => {\n    useEffect(() => {\n        store.dispatch(loadUser())\n    }, []);\n\n    return (\n        <Provider store={store}>\n            <Router>\n                <Fragment>\n                    <Navbar/>\n                    <Switch>\n                        <Route exact path='/' component={Landing}/>\n                        <Route component={Routes} />\n                    </Switch>\n                </Fragment>\n            </Router>\n        </Provider>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}